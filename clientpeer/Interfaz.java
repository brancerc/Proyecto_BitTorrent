/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientpeer;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Font;
import java.util.Random;
/**
 *
 * @author Brando
 */
public class Interfaz extends javax.swing.JFrame {

    static String Ipp;
    static String Archiv;
    static String Direccion;
    int por;

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
       // this.por = ProcesoDesc.;
        initComponents();
        //int por = PocesoDescarga.get
        MyIp.setEditable(false);
        try {
            MyIp.setText(ClientPeer.IP);

        } catch (Exception e) {
        }
        Ipp = MyIp.getText();
        setTitle("C L I E N T E   B I T O R R E N T");
setLocationRelativeTo(null); //Ventana Centrada
 setResizable(false); //Ventana no se modifica tama√±o
MyIp.setVisible(false);
jLabel3.setVisible(false);
jLabel1.setFont(new Font("Serif", Font.ITALIC, 36));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOptionPane1 = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        NombreArchivo = new javax.swing.JTextField();
        Registrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Buscar = new javax.swing.JButton();
        ArchivosDisp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Descargar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        MyIp = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        NombreArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreArchivoActionPerformed(evt);
            }
        });

        Registrar.setText("Registrar");
        Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Old English Text MT", 0, 24)); // NOI18N
        jLabel1.setText("Cliente BitTorrent");

        jLabel2.setText("Nombre del Archivo:");

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        ArchivosDisp.setText("Archivos disponibles");
        ArchivosDisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArchivosDispActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        Descargar.setText("Descargar");
        Descargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescargarActionPerformed(evt);
            }
        });

        jLabel3.setText("My IP:");

        MyIp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MyIpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(Registrar)
                                    .addGap(18, 18, 18)
                                    .addComponent(Buscar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ArchivosDisp))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(NombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(102, 102, 102)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(MyIp, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1)))
                .addGap(23, 39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Descargar)
                .addGap(266, 266, 266))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(MyIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Buscar)
                    .addComponent(Registrar)
                    .addComponent(ArchivosDisp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Descargar)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombreArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreArchivoActionPerformed

    private void RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarActionPerformed
        if (!NombreArchivo.getText().equals("")) {
            ClientPeer.Archivos.put(NombreArchivo.getText(), 100);
            ClientFullDuplex Cliente = new ClientFullDuplex();
            try {
                Cliente.Preguntar("RegAr/" + MyIp.getText() + "/" + NombreArchivo.getText() + "/" + "100");
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "Registro Exitoso");
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un nombre de archivo");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_RegistrarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        ClientFullDuplex Cliente = new ClientFullDuplex();
        String Resultado = null;
        if (!NombreArchivo.getText().equals("")) {
            try {
                Resultado = Cliente.Preguntar("Busqueda/" + NombreArchivo.getText());
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (Resultado.equals("No existe el archivo en red")) {
                JOptionPane.showMessageDialog(null, "No existe el archivo en red");
            } else {
                Resultado = Resultado.substring(0, Resultado.length() - 1);
                String[] parts = Resultado.split(" ");
                DefaultTableModel modelo = new DefaultTableModel();
                modelo.addColumn("Direcciones para Descargar", parts);
                jTable1.setModel(modelo);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un nombre de archivo");
        }

    }//GEN-LAST:event_BuscarActionPerformed

    private void DescargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescargarActionPerformed
        /* ClientDesc Cliente = new ClientDesc();
     String Descarga= "Descarga";
   
     Descarga = Descarga + " " + MyIp.getText() + " " + NombreArchivo.getText();
        System.out.println(Descarga);
     String Resultado = null;
        if(!NombreArchivo.getText().equals("")){
        try {
            Resultado=Cliente.Preguntar(Descarga, (String) jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn()));
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }  
        }else{
            
        }*/

        Random random = new Random();

        for (int i = 10; i <= 100; i += 10) {
            String percentage = i + "%";
            System.out.println(percentage);

            try {
                int delay = random.nextInt(2000) + 1000; // Retardo aleatorio entre 2 y 3 segundos
                Thread.sleep(delay);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        
        if (!NombreArchivo.getText().equals("")) {
            //System.out.println("\n\n\n"+"DESCARGANDO");
            ClientPeer.Archivos.put(NombreArchivo.getText(), 0);
            ClientFullDuplex Cliente = new ClientFullDuplex();
            try {
                Cliente.Preguntar("RegAr/" + MyIp.getText() + "/" + NombreArchivo.getText() + "/" + "0");
            } catch (IOException ex) {
                Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
            }
            Archiv = NombreArchivo.getText();

            //Direccion = (String) jTable1.getV;
            Direccion = (String) jTable1.getValueAt(jTable1.getSelectedRow(), jTable1.getSelectedColumn());
            //System.out.println("\n"+"Generando ruta: " + Direccion);
            Descarga x = new Descarga();
            x.start();
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un nombre de archivo");
        }
    }//GEN-LAST:event_DescargarActionPerformed

    private void ArchivosDispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArchivosDispActionPerformed
        ClientFullDuplex Cliente = new ClientFullDuplex();
        String Resultado = "";
        try {
            Resultado = Cliente.Preguntar("Tabla");
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Resultado.equals("No hay Archivos en red")) {
            JOptionPane.showMessageDialog(null, "No hay Archivos en red");
        } else {
            Resultado = Resultado.substring(0, Resultado.length() - 1);
            String[] parts = Resultado.split(" ");
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("Archivos en red", parts);
            jTable1.setModel(modelo);
        }
    }//GEN-LAST:event_ArchivosDispActionPerformed

    private void MyIpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MyIpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MyIpActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ArchivosDisp;
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Descargar;
    private javax.swing.JTextField MyIp;
    private javax.swing.JTextField NombreArchivo;
    private javax.swing.JButton Registrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
